name: CI Pipeline
on:
  pull_request:
    branches:
      - "main"
  push:  
    branches:
       - "main"
jobs:
  linting:
    name: linting code + dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4.2.2
      - name: install pytest
        run: pip install pytest pytest-md pytest-emoji httpx pytest-asyncio httpx  
      - name: Install dependencies
        run: |
             pip install -r requirements.txt
             pip install pylint

      - name: Run pylint
        run: |
              pylint app.py test_app.py

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile    
  unit_testing:
    name: test code
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: checkout repo
        uses: actions/checkout@v4.2.2
      - name: install pytest
        run: pip install pytest pytest-md pytest-emoji httpx pytest-asyncio httpx fastapi[standard]==0.115.13
      - name: Run pytest
        uses: pavelzw/pytest-action@v2.2.0
        with:
          verbose: true
          emoji: true
          job-summary: true
          report-title: 'Test Report'
      - name: Start app in background
        run: |
          nohup uvicorn app:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Call /version endpoint
        run: |
          curl -s http://127.0.0.1:8000/version | jq -r '.app_version' | grep "v0.0.2"    
  build_image:
    needs: unit_testing
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4.2.2
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/Dockerfile
          tags: ghcr.io/${{ github.repository_owner }}/hivebox:${{ github.sha }}
  security_scorecard:
    name: analysis code
    runs-on: ubuntu-latest
    needs: build_image
    permissions:
      security-events: write
      id-token: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: OSSF Scorecard action
        uses: ossf/scorecard-action@v2.4.2        
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true
      - name: Upload to code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif 